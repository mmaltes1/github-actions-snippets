name: SonarQube Analysis

on:
  workflow_call:
    inputs:
      projectKey:
        required: true
        type: string
      sonarHostUrl:
        required: true
        type: string
      sonarToken:
        required: true
        type: string
  workflow_dispatch:

jobs:
  sonarqube:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache SonarQube Scanner
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarQube Scanner
        env:
          SONAR_HOST_URL: ${{ inputs.sonarHostUrl }}
          SONAR_TOKEN: ${{ inputs.sonarToken }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.projectKey=${{ inputs.projectKey }} \
            -Dsonar.host.url=${{ inputs.sonarHostUrl }} \
            -Dsonar.login=${{ inputs.sonarToken }}

      - name: Check Quality Gate
        env:
          SONAR_HOST_URL: ${{ inputs.sonarHostUrl }}
          SONAR_TOKEN: ${{ inputs.sonarToken }}
        run: |
          status=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=${{ inputs.projectKey }}" | jq -r .projectStatus.status)
          if [ "$status" != "OK" ]; then
            echo "SonarQube Quality Gate failed: $status"
            exit 1
          fi